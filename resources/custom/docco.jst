<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <meta http-equiv="content-type" content="text/html">
    <meta charset="UTF-8">
    <link rel="stylesheet" href="public/stylesheets/normalize.css" media="all" />
    <link rel="stylesheet" href="public/stylesheets/style.css" />
    <link rel="stylesheet" href="public/stylesheets/hljs.min.css" />
    <link rel="stylesheet" href="public/stylesheets/monokai.css" />
    <link rel="stylesheet" href="public/stylesheets/custom.css" />
  </head>
  <body>
    <a href="#top" name="top"></a>
    <% if (sources.length > 1) { %>
      <ul id="jump_to">
        <li>
          <a class="large" href="#!">Jump To &hellip;</a>
          <a class="small" href="#!">+</a>
          <div id="jump_wrapper">
            <div id="jump_page_wrapper">
              <div id="jump_page">
                <% for (var i = 0, l = sources.length; i < l; i++) { %>
                  <% var source = sources[i]; %>
                  <% var title = titles[i]; %>
                  <a class="source" href="<%= relative(destination(source)) %>">
                    <%= title %>
                  </a>
                <% } %>
              </div>
            </div>
          </div>
        </li>
      </ul>
    <% } %>

    <div class="left_area__wrap">
      <div class="left_area">
        <ul class="nav"></ul>
      </div>
      <a href="#" class="backlink"></a>
    </div>

    <div class="container__wrap">
      <div class="container hide" id="mirror"></div>
      <div class="container" id="base">
        <% if (hasTitle) { %>
          <% var section = sections.shift(); %>
          <%= section.docsHtml %>
          <% if (!(/^\s*$/).test(section.codeText)) { %>
            <%= section.codeHtml %>
          <% } else { %>
          <% } %>
        <% } else { %>
          <h1> <%= title %> </h1>
        <% } %>

        <% for (var i = 0, l = sections.length; i < l; i++) { %>
          <% var section = sections[i]; %>
          <%= section.docsHtml %>
          <% if (!(/^\s*$/).test(section.codeText)) { %>
            <%= section.codeHtml %>
          <% } %>
        <% } %>
      </div>
    </div>

    <div class="clear_both"></div>
<script>
function draw_to_block(el_arr, container, parent, div) {
  el_arr.forEach(function(item){
    div.append(item);
  });
  container.append(div);
}

function wrap_to_block(el, direction) {
  var parent = el.parentNode;
  var container = document.querySelector('#mirror');
  var el_arr = [];

  if (direction === "up") {
    var div = document.createElement('div');
    div.className = "container_part";

    while (el.previousSibling) {
      el_arr.push(el.previousSibling);
      parent.removeChild(el.previousSibling)
    };

    el_arr.reverse();
    draw_to_block(el_arr, container, parent, div);
    parent.removeChild(el);
  } else if (direction === "down") {
    var div = document.createElement('div');
    div.className = "container_part";

    while (el.previousSibling) {
      el_arr.push(el.previousSibling);
      parent.removeChild(el.previousSibling)
    };
    el_arr.reverse();
    draw_to_block(el_arr, container, parent, div);
    var el_arr = [];

    var div = document.createElement('div');
    div.className = "container_part";

    while (el.nextSibling) {
      el_arr.push(el.nextSibling);
      parent.removeChild(el.nextSibling)
    };

    draw_to_block(el_arr, container, parent, div);
    parent.removeChild(el);
  }
};

function find_divider(xpath_result, count) {
  //var item = xpath_result.iterateNext();
  elements = [];

  while(count > 0) {
    item = xpath_result.iterateNext();
    elements.push(item);
    count -= 1;
  };

  if (elements.length === 0) {
    var base = document.querySelector('#base');
    base.style.backgroundColor = "white";
    base.style.boxShadow = "0 0 15px #505050";
    return;
  }
  elements.forEach(function(el, index, arr) {
    var _index = index + 1;
    if (_index < arr.length) {
      wrap_to_block(el, "up");
    } else {
      wrap_to_block(el, "down");
    }
  });
  var container = document.querySelector('#mirror');
  container.classList.remove('hide');
};
</script>

    <script src="public/js/highlight.min.js"></script>
    <script>hljs.initHighlightingOnLoad();</script>
    <script>
       function transliterate(word) {
         var answer = "";
         var a = {}

         a["Ё"]="YO";a["Й"]="I";a["Ц"]="TS";a["У"]="U";a["К"]="K";a["Е"]="E";a["Н"]="N";a["Г"]="G";a["Ш"]="SH";a["Щ"]="SCH";a["З"]="Z";a["Х"]="H";a["Ъ"]="'";
         a["ё"]="yo";a["й"]="i";a["ц"]="ts";a["у"]="u";a["к"]="k";a["е"]="e";a["н"]="n";a["г"]="g";a["ш"]="sh";a["щ"]="sch";a["з"]="z";a["х"]="h";a["ъ"]="'";
         a["Ф"]="F";a["Ы"]="I";a["В"]="V";a["А"]="a";a["П"]="P";a["Р"]="R";a["О"]="O";a["Л"]="L";a["Д"]="D";a["Ж"]="ZH";a["Э"]="E";
         a["ф"]="f";a["ы"]="i";a["в"]="v";a["а"]="a";a["п"]="p";a["р"]="r";a["о"]="o";a["л"]="l";a["д"]="d";a["ж"]="zh";a["э"]="e";
         a["Я"]="Ya";a["Ч"]="CH";a["С"]="S";a["М"]="M";a["И"]="I";a["Т"]="T";a["Ь"]="'";a["Б"]="B";a["Ю"]="YU";
         a["я"]="ya";a["ч"]="ch";a["с"]="s";a["м"]="m";a["и"]="i";a["т"]="t";a["ь"]="'";a["б"]="b";a["ю"]="yu";

         for (i = 0; i < word.length; ++i) {
           answer += a[word[i]] === undefined ? word[i] : a[word[i]];
         }
         return answer;
       }
    </script>
    <script>
      document.addEventListener("DOMContentLoaded", function() {
        var headers = [].slice.call( document.querySelectorAll('h1') ).forEach(
          function(head) {
            var name = transliterate(head.textContent).replace(/\s/g, '_');

            var tag_a = document.createElement('a');
            tag_a.name = name;
            tag_a.href = '#' + name;
            tag_a.textContent = name;
            tag_a.className = "anchor_link"
            head.parentNode.insertBefore(tag_a, head);

            var div_top = document.createElement('div');
            div_top.className = "to_top_div";
            var tag_top = document.createElement('a');
            tag_top.href = "#top";
            div_top.append(tag_top);
            head.parentNode.insertBefore(div_top, head.nextSibling);

            var li = document.createElement('li');
            var a = document.createElement('a');
            a.textContent = head.textContent;
            a.href = "#" + name;
            li.append(a);
            document.querySelector('ul.nav').append(li);
          }
        );
        var divides = document.evaluate("//p[contains(.,'~')]", document, null, XPathResult.ANY_TYPE, null);
        var divides_count = document.evaluate("count(//p[contains(.,'~')])", document, null, XPathResult.NUMBER_TYPE, null).numberValue;
        find_divider(divides, divides_count);
      });
    </script>
  </body>
</html>
